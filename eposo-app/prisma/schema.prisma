// This is your Prisma schema file for MySQL.
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String            @id @default(cuid())
  name            String?
  email           String?           @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  
  // Custom fields for our app
  nickname        String?           @unique
  interests       String?
  preferredRegion String?

  accounts        Account[]
  sessions        Session[]
  matchingRequest MatchingRequest[]
  matchedGroups   MatchedGroup[]    @relation("groupMembers")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model MatchingRequest {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  status    String
  createdAt DateTime @default(now())
}

model MatchedGroup {
  id        String   @id @default(cuid())
  members   User[]   @relation("groupMembers")
  createdAt DateTime @default(now())
}
